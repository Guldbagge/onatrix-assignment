@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper

@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;

    var officeLocation = settings?.Value<string>("officeLocation") ?? "";
    var headerXLink = settings?.Value<string>("headerXLink") ?? "";
    var headerFacebookLink = settings?.Value<string>("headerFacebookLink") ?? "";
    var headerInstagramLink = settings?.Value<string>("headerInstagramLink") ?? "";
    var headerLink1 = settings?.Value<string>("headerLink1") ?? "";
    var headerLinkText1 = settings?.Value<string>("headerLinkText1") ?? "";
    var headerLink2 = settings?.Value<string>("headerLink2") ?? "";
    var headerLinkText2 = settings?.Value<string>("headerLinkText2") ?? "";
    var headerLink3 = settings?.Value<string>("headerLink3") ?? "";
    var headerLinkText3 = settings?.Value<string>("headerLinkText3") ?? "";
    var headerLink4 = settings?.Value<string>("headerLink4") ?? "";
    var headerLinkText4 = settings?.Value<string>("headerLinkText4") ?? "";

    var siteLogo = settings?.Value<IPublishedContent>("siteLogo")?.Url() ?? "";
    
    
    var currentPageUrl = Model.Url().TrimEnd('/');
    var headerLink1Trimmed = headerLink1.TrimEnd('/');
    var headerLink2Trimmed = headerLink2.TrimEnd('/');
    var headerLink3Trimmed = headerLink3.TrimEnd('/');
    var headerLink4Trimmed = headerLink4.TrimEnd('/');

     var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();

}

<header id="header">
    <div class="background-primary">
        <div class="container">
            <div class="text">
                <p>@officeLocation</p>
            </div>
            <div class="social-links">
                <a href="/">
                    <i class="fa-solid fa-house"></i>
                </a>
                <a href="@headerXLink">
                    <i class="fa-brands fa-x-twitter"></i>
                </a>
                <a href="@headerFacebookLink">
                    <i class="fab fa-facebook"></i>
                </a>
                <a href="@headerInstagramLink">
                    <i class="fab fa-instagram"></i>
                </a>
            </div>
            
      
        </div>
    </div>

    <div class="background-light">
        <div class="container">
            <div class="logo">
                <a href="/"><img src="@siteLogo" alt="Logo Image"></a>
            </div>
            <div class="links">
  @if (selection?.Length > 0)
                {
                    @foreach (var item in selection)
                    {
                        <a class="@(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")" href="@item.Url(PublishedUrlProvider)">@item.Name</a>
                    }
                }
            </div>
            <div class="search-icon">
                <a href="#"><i class="fas fa-search"></i></a>
            </div>
        </div>
    </div>
</header>
