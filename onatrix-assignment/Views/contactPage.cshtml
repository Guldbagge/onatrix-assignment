@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage;
@* @inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContactPage>; *@
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper

@using ContentModel = Umbraco.Cms.Web.Common.PublishedModels;

@{
    Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;

    var servicesBannerBackground = settings?.Value<IPublishedContent>("servicesBannerBackground")?.Url() ?? "";
    var servicesBannerLinkText1 = settings?.Value<string>("servicesBannerLinkText1") ?? "";
    var servicesBannerLink1 = settings?.Value<string>("servicesBannerLink1") ?? "";


    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(ViewData["error_message"]?.ToString()!, out bool error_message);

}

<section id="contact" class="banner bg-gray">
    <div class="background">
        <img src="@servicesBannerBackground" alt="Backround image">
        <div class="content">
            <h2>@Model?.Value("contactHeadline")</h2>
            <div class="links">
                <a class="home" href="@servicesBannerLink1">@servicesBannerLinkText1</a>
                <div class="chevron"><i class="fa-regular fa-chevron-right"></i></div>
                <a class="activ" href="@Model?.Value("contactLink2")">@Model?.Value("contactLinkText2")</a>
            </div>
        </div>
    </div>
</section>

@await Html.PartialAsync("partials/static/next-project.cshtml")

<section id="map">
    <div class="map">
        <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d2035.1615241898567!2d18.05131977757098!3d59.33025707461478!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1ssv!2sse!4v1725544158174!5m2!1ssv!2sse"
                width="100%"
                height="750"
                style="border:0;"
                allowFullScreen=""
                loading="lazy"
                referrerPolicy="no-referrer-when-downgrade"
                title="Google Maps"></iframe>
    </div>

    <div class="container">
        <div class="request-box bg-light">
            <div class="request-text">
                <h5>Request a call back</h5>
                <h2>Let us know about your next project</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas consectetur, ligula semper sagittis lobortis, eros metus efficitur purus</p>
            </div>

            <div class="request-form">

                @using (Html.BeginUmbracoForm("HandleSubmit", "ContactSurface", FormMethod.Post, new { id = "contact-form" }))
                {
                    <div class="form-input-group">
                        <label class="form-label" for="name">Name</label>
                        <input id="name" name="name" type="text" placeholder="Enter your name" class="form-input" value="@ViewData["name"]">
                        <span class="form-input-error@((error_name) ? "form-invalid-input": null)">You must enter your name</span>
                    </div>
                    <div class="form-input-group">
                        <label class="form-label" for="email">E-mail address</label>
                        <input id="email" name="email" type="email" placeholder="Enter your e-mail address" class="form-input" value="@ViewData["email"]">
                        <span class="form-input-error@((error_email) ? "form-invalid-input" : null)">You must enter a valid e-mail address</span>
                    </div>
                    <div class="form-input-group">
                        <label class="form-label" for="message">Message</label>
                        <textarea id="message" name="message" placeholder="Enter your message..." class="form-textarea" @ViewData["message"]></textarea>
                        <span class="form-input-error@((error_message) ? "form-invalid-input": null)">You must enter a message</span>
                    </div>

                    @*                     <div class="form-input-group">
                <label class="form-label" for="dropdown">Select an option</label>
                <select id="dropdown" name="dropdown" class="form-input">
                <option value="">Choose an option</option>
                <option value="option1">Option 1</option>
                <option value="option2">Option 2</option>
                <option value="option3">Option 3</option>
                </select>
                <span class="form-input-error">You must select an option</span>
                </div> *@
                    <input type="hidden" id="scroll-position" name="scroll-position" value="0" />

                    <button type="submit" class="form-button btn-submit btn btn-primary">Submit</button>
                }

                @if (TempData["success"] != null)
                {
                    <div class="success-message">@TempData["Success"]</div>
                }

            </div>

            @* <div class="request-form">
            <form onsubmit="handleContactFormSubmit(event)" novalidate>
            @Html.GetBlockListHtml(Model.ContactForm)
            </form>
            </div> *@
        </div>
    </div>
</section>


@await Html.PartialAsync("partials/static/partners.cshtml")


